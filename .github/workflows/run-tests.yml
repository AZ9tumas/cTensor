name: cTensor CI Build and Test

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Linux (${{ matrix.c_compiler }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        c_compiler: [gcc, clang]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential cmake ${{ matrix.c_compiler }}

    - name: Configure CMake
      run: cmake -B build -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}

    - name: Build project
      run: cmake --build build

    - name: Run tests
      run: |
        mkdir -p test_results
        ./build/bin/cten_tests > test_results/results-linux-${{ matrix.c_compiler }}.txt 2>&1 || echo "Test execution reported an error, proceeding to upload results."

    - name: Upload Linux results
      uses: actions/upload-artifact@v4
      with:
        name: results-linux-${{ matrix.c_compiler }}
        path: test_results/results-linux-${{ matrix.c_compiler }}.txt

  build-macos:
    name: macOS (Clang)
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: brew install cmake

    - name: Configure CMake
      run: cmake -B build 

    - name: Build project
      run: cmake --build build

    - name: Run tests
      run: |
        mkdir -p test_results
        ./build/bin/cten_tests > test_results/results-macos.txt 2>&1 || echo "Test execution reported an error, proceeding to upload results."

    - name: Upload macOS results
      uses: actions/upload-artifact@v4
      with:
        name: results-macos
        path: test_results/results-macos.txt

  build-windows:
    name: Windows (MSVC)
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      shell: pwsh 
      run: cmake -B build 

    - name: Build project
      shell: pwsh
      run: cmake --build build --config Debug 

    - name: Run tests
      shell: pwsh
      run: |
        New-Item -Path test_results -ItemType Directory -Force
        .\build\bin\Debug\cten_tests.exe > test_results\results-windows.txt 2>&1 || echo "Test execution reported an error, proceeding to upload results."
        Get-Content test_results\results-windows.txt

    - name: Upload Windows results
      uses: actions/upload-artifact@v4
      with:
        name: results-windows
        path: test_results/results-windows.txt

  final_verification:
    name: Final Verification
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4 

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all_downloaded_results 

    - name: Verify all test results
      run: python .github/check_all_results.py all_downloaded_results

    - name: Upload all result files and verification log (for debugging)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: all-final-results
        path: |
          all_downloaded_results/
          # Add any direct output from check_all_results.py if needed
